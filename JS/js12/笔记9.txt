节点关系
    子节点
        父节点.childNodes      高级浏览器(元素节点和文本节点)      IE8-（元素节点）
        父节点.children        元素节点        类似  :nth-child
        oUl.firstElementChild || oUl.firstChild;        第一个子节点   类似 :first-child
        oUl.lastElementChild || oUl.lastChild;        最后一个子节点   类似 :last-child

    同胞节点
        不带Element:       高级浏览器(文本节点)   IE8-(元素节点)
        带Element:         高级浏览器(元素节点)   IE8-(undefined)
        oUl.nextElementSibling || oUl.nextSibling           下一个同胞节点     类似 +
        oUl.previousElementSibling || oUl.previousSibling   上一个同胞节点

    父节点
        子节点.parentNode      返回父节点，最顶层就是document
        子节点.offsetParent    返回有定位属性的最近的祖先元素

    节点
        document.body               返回body节点
        document.documentElement    返回html节点
        document                    返回文档节点
节点操作
    创建
        元素节点    document.createElement("标签名")
        文本节点    document.createTextNode("文本内容")
    增加
        追加到最后                   父节点.appendChild(新子节点)
        插入到指定节点的前面         父节点.insertBefore(新子节点, 指定节点)
    删除
        父节点.removeChild(移除的节点)
    替换
        父节点.replaceChild(新子节点，替换节点)
节点的属性和方法
    element.hasAttribute()	如果元素拥有指定属性，则返回true，否则返回 false。
    element.hasAttributes()	如果元素拥有属性，则返回 true，否则返回 false。
    element.hasChildNodes()	如果元素拥有子节点，则返回 true，否则 false。
    element.nodeName	    返回元素的名称。
    element.nodeType	    返回元素的节点类型。
    element.nodeValue	    设置或返回元素值。
    element.tagName	        返回元素的标签名。
    element.cloneNode(true)	    克隆元素本身（包含属性）    参数是表示是否复制后代节点
    document.createDocumentFragment     创建文档片段，处理节点操作性能问题
querySelector 和 getElement的区别
    querySelector   静态的    不会随着节点操作而改变元素集合  （操作方便）
    getElement      动态的    会随着节点操作而改变元素集合       （性能优）